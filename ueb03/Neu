Die Klanghexe 




Von Joshua-Scott Schöttke











Tirras
Es war mal wieder ein Jahr vorbei. Der Herzog ließ alle Mädchen zwischen 14 und 16 Jahren auf dem Hof antreten. Von klein bis groß, von dünn bis dick. Hauptsache es waren Mädchen. Sie standen alle sortiert nach alter in genau perfekten Reihen, als würden Soldaten sich zu einem ausgefüllten Viereck formatieren. Das Gemäuer in dem sie waren, war komplett aus Gestein. Die Steine waren schon sehr alt und bröckelig, sodass man befürchten musste, dass es beim nächsten Sturm einstürzte. Es war das einzige Gebäude im Dorf das aus Stein war. Die anderen Gebäude waren höchstens mit Stein gestützt, damit die alten Holzbalken nicht zerbrachen oder wegrutschten. Es gab zwei Eingänge zum Hof. Der eine Eingang war eine prachtvolle Eisentür, die in das eigentliche Gebäude führte.Sie war schmuckvoll verziert. Mit Edelsteinen und Einkerbungen war dieses Tor das Wertvollste was das Dorf Tirras zu bieten hatte. Der andere Eingang war eine stabile Holztür. Sie war bestimmt fünfzehn Fuß hoch und mehrere Fuß breit. Es war das Tor zum Dorf hin.
Die Mädchen standen wie angewurzelt da und starrten den Herzog an, der sich an der Eisentür befand. Sie warteten und warteten darauf, dass irgendetwas passierte. Doch es geschah nichts. Es war so als wären sie nur zum Anstarren da. Plötzlich ging die Holztür auf. Es wurden sechs starke Männer zum Öffnen der Tür benötigt. Als das Tor offen war, trat eine Frau in den Hof. Sie war alt und hatte einen Gehstock in ihrer linken Hand. In ihrem grauschwarzen Kleid, das so aussah als hätte sie darin geschlafen, sah sie zerbrechlich aus. So zerbrechlich das sie sich schon auf ihren Gehstock abstützen musste, aber sie war flink. Sie schaute grimmig drein und als sie einige Mädchen anschaute fuhren sie vor Schreck zusammen. Die Falten in ihrem Gesicht und das lange gelockte graue Haar verrieten ungefähr wie alt sie war. Doch niemand traute sich auch nur darüber nachzudenken, denn man hörte so einiges von ihr. Sie soll Gedanken lesen können, mit Tieren sprechen oder übers Wasser laufen. Das meiste war natürlich reiner Humbug. Aber mit einer Sache hatten die Leute recht. Sie konnte die Menschen manipulieren.
Sie schritt leise aber zielstrebig zum Herzog. Sie hatte es anscheinend eilig. Der Herzog verbeugte sich und hielt seine Arme offen. Die alte Dame wies ihn mit einer flinken Handbewegung ab und deutete auf die Holztür. Ihr grimmiges Gesicht und die freche Handbewegung führten dazu, dass der Herzog wütend wurde, so wütend das er rot anlief. Er stieß seinen Fuß in den Boden und zeigte auf die Frau, doch die ignorierte ihn weiterhin. Er verließ den Hof und stieß vorher noch einen Holzbalken um, um sich von seiner Wut zu lösen. Als er hinter der Tür verschwand, reckte sich die alte Frau, auch wenn ihr Buckel es nicht weit erlaubte. Selbst aufgerichtet war sie immer noch kleiner als die größten Mädchen im Hof. Es war die ganze Zeit still geblieben. Die alte Frau holte tief Luft und fing an zu singen.
Die Mädchen waren wie benebelt von dieser Melodie. Sie war so glockenklar, dass sie die Zeit vergaßen. Plötzlich änderte sich die Melodie, es war so als würdenPauken, Trompeten, Geigen und viele andere Musikinstrumente spielen. Es hörte sich so an als würde die Musik selber sagen „Kommt, tanzt mit mir!“Die Mädchen fingen an in ihrer Trance zu tanzen. Einmal durch den ganzen Raum. Ihre Kleider wehten im Wind. Die Melodie änderte sich wieder zur ersten Melodie und verstummte langsam. Die Mädchen erwachten aus ihrer Trance. Sie blickten verwundert drein als sie bemerkten wo sie standen. Ihnen war nicht aufgefallen das sie ihren Platz verlassen hatten. Das einzige was sie in den letzten Minuten bemerkten war die schöne Melodie die jetzt nicht mehr war. Plötzlich hörten die Mädchen einen stumpfen aufprall. Die alte Frau hat ihren Gehstock hoch gehoben und auf den Boden zu sausen lassen. Die Mädchen besonnen sich wieder und stellten sich wieder in die Reihen auf. Die alte Frau stolperte halbwegs in die erste Reihe und betrachtete die jungen Dinger. Sie suchte sich ein Gör aus und blickte ihr tief in die Augen. Sie forderte, mit diesem Blick, das Mädchen auf etwas zu tun. Doch das Mädchen verstand nicht was und brach vor lauter Panik, etwas Falsches zutun, zusammen. Die Frau drehte sich um spuckte aus und ging an ihren alten Platz zurück. „Hat der Herzog euch nicht gesagt was ihr tun sollt wenn ich da bin?“,schrie sie wütend. Sie guckte kurz in die Menge und fuhr fort „Ihr sollt singen!“, schrie sie genau so wütend. Nach einem kurzen verdutzten Blick,der durch die Aufgabe und dem zusammengebrochenem Mädchen aus geschah, fingen die Mädchen plötzlich an zu singen. Diese Stimmen über hunderte Stimme und alle ein anderes Lied. Die alte Frau musste sich vor Schmerz die Ohren zuhalten. Die Mädchen hörten abrupt auf als sie sahen, dass ihre Stimmen kein Segen waren. Die alte Frau hob ihren knöchrigen Finger und rief mit Schmerzen verbunden: „Eine zur Zeit!“
Es dauerte eine lange Zeit bis sie alle Mädchen singen gehört hatte. Einige sangen schief, andere trafen die Töne nicht und wieder andere hatten gar kein Talent. Als sie bei dem kleinen Mädchen ankam übersprang sie sie einfach, da die Frau wusste, dass sie ihr Erbe nicht antreten könnte. Für dieses Erbe muss man eine himmlische Stimme haben, stark, selbstbewusst und vor nichts Angst haben, nicht einmal vor dem sterben oder vorm Tod. Dieses Erbe ist das Erbe einer Klanghexe.
Als sie jedes Mädchen gehört hatte ging sie zur Holztür drehte sich kurz vorher um und sprach: „Ihr seid eine Beleidigung für dieses Dorf und mein Werk! Dantan soll euch holen während ihr eure Körper verkauft!“Plötzlich rief ein Mädchen: „Wer ist das?“ Alle erschraken. „Lernt ihr denn gar nichts von euren Eltern.“, sprach die alte Dame mit saurer Zunge. Sie sprach wie in einer Gruselgeschichte: „Dantan ist laut einer alten Sage ein Mörder gewesen. Als der Tod ihn holen wollte, brachte er den Tod selber um und übernahm somit seine Fähigkeiten. Er wandelte nun über die Erde und nahm jeden mit ins Jenseits die dort hin wollten, beziehungsweise deren Zeit hier im Diesseits vorbei war.“ Sie klopfte mit ihrem hölzernen Stock gegen die Tür. Sie wurde geöffnet und die alte Dame verschwand, als sie noch einmal vor den Mädchen ausspuckte. Die Mädchen waren erschrocken und zu tiefst traurig darüber, dass Minerva keine von ihnen ausgesucht hat und das sie so verletzend sein konnte. 
Der Herzog, ein muskulöser großer Mann mit kurzem schwarzem Haar in dem eine silberne Krone hauste, in seinen seidenen Gewändern mit Saum verziert und auf seiner Brust das Wappen der Königs, der Dachs, wartete schon bereits ungeduldig in seinen braunen Lederschuhen auf die alte Frau. Als er sie sah wurde er wieder knall rot vor Wut. Sie gingen aufeinander zu. Als sie nur ein paar Fingerbreiten auseinander standen starrten sie sich in die Augen. Als der Herzog anfangen wollte zu sprechen stach die Frau mit dem spitzen Ende des Gehstocks auf seinen Fuß. „ Ich bin keine verbitterte vergessliche und dümmliche Frau, Mirachs! Ich glaube, dass du das eigentlich wissen solltest. Dein Vater wusste es, schade, dass er nicht mehr unter uns ist. Trotzdem für deine Ignoranz muss du bezahlen Immerhin war ich schon zweimal gnädig zu dir. Bring mir deine Mädchen!“. Schnauzte sie ihn an. „Treib es nicht zu weit Minerva oder ich…“. „oder was Mirachs?“, unterbrach sie ihn, „Willst du mich umbringen lassen. Du weißt selber das ich schneller bin als alle deine Wachen zusammen. Jetzt hole deine Kinder oder ich werde dich hier und jetzt töten!“ Als hätten die Wachen nur darauf gewartet solch eine Reaktion zu hören, waren sie plötzlich kampfbereit und hatten Minerva und Mirachs umzingelt. „Entweder steckt ihr eure Waffen wieder ein und geht oder ich bringe euch auch noch um!“ sagte Minerva trocken. Die Wachen schauten von Mirachs zu Minerva und wieder zu Mirachs. Mirachs befahl den Wachen mit einer Handbewegung zu gehen. Die Wachen hörten doch sie blieben in Reichweite um einzugreifen falls etwas schief gehen sollte. Mirachs beugte sich zu Minervas linken Ohr und flüsterte: „Ich habe meine beiden Töchter letztes Jahr bei einem Banditenüberfall verloren. Ich weiß nicht ob sie leben oder schon tot sind.“, erklärte Mirachs mit leiser Stimme. Minerva schaute in seine Augen um eine Lüge daraus zu entdecken, doch das einzige was sie fand war Trauer und Entsetzen. Sie drehte sich mit einem Ruck um und schnaubte verächtlich. Sie blieb nach ein paar schritten stehen und rief: „Mirachs, wenn du es nochmal wagen solltest mich zu ignorieren kastriere ich deine Söhne und falls du noch ein Mädchen bekommen solltest.Naja bete drum, dass du es nicht tust. Hast du mich verstanden?“. Minerva wartete nicht einmal auf eine Antwort sondern ging einfach die steinerde Straße hinunter.
Die steinerde Straße war die Hauptstraße im Dorf. Sie führte vom Hof bis zum Nordtor einmal quer durchs Dorf, ansonsten gab es nur platt getretene Feldwege. Das Dorf selber war umzäunt von einer Palisade die mindestens 7000 Einwohner umfassen konnte. An der steinerden Straße waren die Händler und Arbeiter beschäftigt, von denen man offiziell wusste. Im Dorf gab es einen Schmied, einen Schreiner, zwei Wirte die sich um ihre Kunden prügelten, einen Jäger, einen Metzger, einen Weber, einen Holzfäller bei dem gleich 20 Mann Arbeit hatten und ein Lebensmittelhändler.
Minerva ging die Straße hinunter und als man sie sah räumte man die Straße frei. Sie wurde angestarrt, als währe sie eine Mörderin, was sie schließlich auch war. Aber keiner wagte sich ihr zu nähern. Was auch verständlich war, denn jeder der sie angriff, war danach tot. Sie wurde als Vogelfrei eingestuft. Einige mutige beziehungsweise törichte Männer haben schon versucht sie um die Ecke zu bringen, aber keiner von denen hat überlebt.
Sie ging zum Schmied, ihre Türscharniere wollten nicht mehr ganz recht und er sollte sich das mal genauer angucken. Danach ging sie zum Weber. Als sie die Tür öffnete sah sie jemanden am Webstuhl. Sie konnte die Person erst nicht recht erkennen, weil ihre Augen nicht mehr die besten waren und die einzige Lichtquelle das Feuer im Kamin war. Die Person am Webstuhl drehte sich zur Tür und da erkannte Minerva ihre Cousine. Nomisia saß auf ihrem Hocker in einem farbenfrohen Kleid. „Minerva komm rein. Komm rein.“, sagte Nomisia in einem überfüllten freundlichen Ton. Als Nomisia aufstand musste sich Minerva den Kopf schütteln. Sie sah das Nomisia schon wieder Schwanger war. Das sechste oder siebte Kind schon in ihrer Ehe. „Kusinchen du sollst doch nicht Arbeiten wenn du hochgradig Schwanger bist“, sagte Minerva in einem besorgten Ton. „Ach Minerva, glaubst du etwa Johna könnte Weben.“ Beide mussten anfangen zu lachen. „Nomisia“, fing Minerva an als sie sich wieder eingekriegt hatten, „ich bräuchte wieder mal eine neue Decke die Ratten und Motten haben wieder zugeschlagen.“. „Wir müssten oben noch eine haben ich werde gleich mal hinauf…“ „Du wirst dich hüten da hinauf zugehen. Ich werde hinaufgehen und du kannst uns erstmal einen Tee kochen.“ Als Minerva eine passende Decke gefunden hatte kam sie wieder runter und trank mit ihrer Cousine den Tee. Sie sprachen über zweierlei Dinge. Nach einer geraumen Zeit kam Johna,Nomisias Ehemann, nach Hause. Minerva mochte ihn nicht. Es waren viele kleine Dinge die ihr an ihm missfielen aber die wohl schlimmste Sache war sein Beruf, Stadthalter. Das heißt egal was passiert Johna wusste es als erstesund weil er immer alles wissen musste hatte er wenig Zeit für Nomisia und seine Kinder. Als er in der Tür stand verabschiedete sich Minerva sofort von Nomisia und ging an Johna vorbei, doch vorher strafte sie ihn mit einem Blick der unter die Haut kroch und einen Angst und Schrecken vor ihr verbreitet. Man hatte das Gefühl, das sie einen gleich anspringen und den Kopf abreisen würde. Man nannte diesen Blick gerne den Hexenblick. Minerva strafte jeden den sie nicht mochte mit diesem Blick und das waren viele. Fast das ganze Dorf und wenn man die anderen Dörfer noch mit zählte währen es wahrscheinlich über Hunderttausende. 
Es war bereits spät am Abend als sie durchs Nordtor ging um zu ihrer Hütte zu gelangen. Bei dem schönen rotgefärbten Himmel fühlte sie sich wohl mit dem Gedanken schon bald wieder im eigenen Schaukelstuhl zu sitzen und zu stricken. Als sie ihre alte Hütte im Wald erblickte war sie froh darüber, dass ihre Knochen noch mitmachten. Das Haus war von Moos übersät und das Holz wurde auch schon so langsam Morsch. Sie öffnete die Tür mit einem kleinen Schlüssel aus Eisen und mit einem Ruck schlug sie sich die Tür beinahean den Kopf. Anscheint hatte der Schmied die Tür schon repariert. Der Kamin war schon an, als sie in ihre Hütte kam. Ein Eintopf brodelte über dem Feuer. Sie wusste genau wer den Eintopf gemacht hat. Sie probierte und genoss diesen Appetitanreger denn ihre Nichte konnte einfach zu gut kochen um den Eintopf einfach nur runterzuschlucken. „Und schmeckt es dir?“ sagte Aurelia als sie in der Tür stand, mit einem Korb in den Armen, der voller Obst und Gemüse war. Minerva erschrak als sie sie hörte. Aurelia sah bis auf die Falten und den Buckel genauso aus wie Minerva. Sie hatte ihr blondes Haar nach oben gesteckt und ihr schwarzes Kleid trägt sie genauso faltig wie ihre Tante. Minerva setzte sich mit ihrem Strickzeug in ihren Schaukelstuhl und betrachtete erst einmal ihre Hütte. Mit den zwei Betten, der Abstellkammer und den Schränken war sie eindeutig zu klein geworden seitdem Aurelia bei ihr wohnte.
„Aurelia meine liebe glaubst du nicht auch das wir das Häuschen erweitern müssten?“, bemerkte Minerva beifällig. Aurelia drehte sich zum Topf und schmeckte den Eintopf ab. „Und woher sollen wir das Geld nehmen? Mit dem Verkauf von Gemüse und Obst? Immerhin brauchen wir selber diesen Vorrat, sonst müssten wir auch noch Nahrung kaufen und dass können wir uns nicht erlauben.“, sagte Aurelia, als sie den Topf vom Feuer nahm um zu servieren. „Ich könnte die Baumeister ja besingen um sie dazu zu zwingen unser Haus zu erweitern.“, sagte Minerva spöttisch. Nach einer kurzen Pause sprach Aurelia: „Warum tust du es nicht einfach?“. Man hörte nur noch das Feuer im Kamin und das Blubbern des Eintopfes. Irgendwann sagte Minerva in Gedanken versunken:„Ich kann nicht, meine Liebe.“. Damit war das Gespräch beendet. 





















Kapitel 2
„Verdammt!“ schrie Aurelia, als ihr ein Tonkrug aus der Hand fiel. Sie schaute aus der Abstellkammer nach Minerva. Doch sie schlief noch tief und fest. Aurelia wischte das Wasser weg und überlegte die ganze Zeit was Minerva damit meinen könnte das sie die Baumeister nicht besingen konnte. Sie dachte so stark nach das ihr beinahe der nächste Krug runtergefallen wäre. Sie ging zum Kamin und feuerte ihn an. Als das Feuer stark genug war setzte sie einen Kessel mit Wasser auf und bereitete das Frühstück vor. Sie stand immer kurz nach Sonnenaufgang auf, weil sie sonst nicht mehr schlafen konnte. Doch an diesem Morgen war sie sehr abgelenkt, nicht nur wegen ihrer Tante sondern auch wegen ihrer Mutter. Naurita  hieß sie. Naurita war die Kräuterhexe am Hofe des Königs. Genauso wie Minerva kann man Naurita auch nicht umbringen, doch warum wusste Aurelia nicht. Auf jeden Fall nicht wegen ihrer Kräuter. Die brauchte sie eher, um Leuten die Potenz zu rauben oder ihnen zu geben. Zum Beispiel dem König. König Devidos  ist der Herrscher von ganz Marunias  und ein hinterlistiges Schwein, denn er betrog seine Frau. Er betrog sie mit Aurelias Mutter, Naurita. Weil Aurelia eine Frau mit Würde und Anstand war stellte sie ihre Mutter zur Wahl. Entweder sie oder der König. Und jetzt sitzt sie neben Minerva auf dem Bett und weckte sie sanft zum Frühstück. Minerva wachte grimmig auf und hustete schwer. 
Nach dem guten Frühstück gingen beide aus dem Haus. Aurelia ging in den Garten um Obst und Gemüse fürs Mittagessen zu sammeln. Minerva ging tief in den Wald hinein. Sie marschierte mehrere Meilen über Stock und Stein, bis sie letztendlich zu einem Bach kommt. Sie guckt in den Bach. Erst sieht sie nur die glatten Steine doch dann sieht sie die Wasseroberfläche. Sie sieht ihr Spiegelbild. Verträumt sieht sie tief in ihre eigenen Augen. Nach einiger Zeit kommt sie wieder zur Besinnung. Sie schlägt mit der offenen Hand nach ihrem Spiegelbild, als wolle sie einen schlimmen Gedanken loswerden. Plötzlich hörte sie eine Stimme. Sie griff nach ihrem Gehstock und hielt ihn fest in beiden Händen. Sie hört wie etwas näher kam doch sie konnte nicht zuordnen woher diese Stimme kam. „Bist du wirklich so einfallslos, dass du glaubst mich hören und Orten zu können?“, hörte Minerva eine Stimme von oben rufen. Sie schaute blitzschnell nach oben, aber sie erkannte nichts. „Ich komm schon runter Dummerchen.“, sagte die Stimme. Ein vogelartiges Wesen kam herunter geflattert. Es hatte keine Federn eher Schuppen und die Flügel waren wie Leder. Auf Minervas Augen machte sich erstaunen breit. „Ich weiß was du bist. Du bist ein Zinderling . Das ich solch ein Wesen wie dich noch in meinen alter sehen darf grenzt auch schon an ein Wunder.“, sagte Minerva erstaunt.  „Wie heißt du?“ setzt sie nach. „Iccch biiin Darangos.“, sagte er mit zischender Zunge, „Und mit wem hab iccch die Ehre?“. „Mein Name lautet Minerva.“. „Dann bin ich bei genau der Richtigen. Ich gebe dir ein Rätsel auf. Höre genau zu. Ich werde es nicht wiederholen. In einer Stadt komplett aus Stein, die im Süden liegt, gibt es Menschen die ein gewisses Talent haben, doch sie können es nicht ausleben, weil sie eigentlich nicht existieren. Nichts kann sie aufspüren, nicht einmal ein Drachenherz. Die steinerne Mauer, die diese armen Seelen gefangen halten, sind für immer verschlossen, doch nur eine kann es schaffen sie zu befreien. Reise in diese Stadt und du wirst erkennen was ich meine.“, mit diesen Worten flog er fort. Minerva schaute ihm nach und dachte über seine Worte nach. Minerva geht sehr langsam nach Hause. Sie war ganz in Gedanken vertieft und versank allmählich darin. Als sie sich wieder fing, war es bereits Nachmittag. Sie ging so schnell wie ihre Knochen sie tragen konnten, also nicht sehr schnell. Als sie wieder zuhause war wartete Aurelia schon ungeduldig auf sie. „Wo warst du?“, fragte Aurelia mit Nachdruck. „Entschuldige bitte, dass ich mal ein bisschen zu spät komme, weil meine Knochen nicht mehr so schnell sind.“, antwortete Minerva schroff. „Naja, Hauptsache du bist heil und hungrig.“. beendetete Aurelia das Gespräch. Nach dem Mittagessen kochte Aurelia Tee und saß sich neben Minerva aufs Bett. 
„Aurelia. Ich hab ein Zinderling getroffen! Weißt du was diese Wesen tun?“ fragt Minerva im sachten Ton. „Ich weiß nur, dass diese Wesen nur selten auftauchen. Der Legende nach helfen sie den Wenigen die Hilfe benötigen.“, erinnerte Aurelia nach kurzer Zeit. „Nur das es keine Legende ist. Es ist die Wahrheit. Denn dieses Zinderling gab mir ein Rätsel auf. Ein Rätsel welches ich lösen muss, damit ein Problem behoben werden kann. Dabei habe ich noch nicht mal einen geraumen Verdacht was es meinte.“ Minerva stand auf und ging zu ihrem Schrank. Sie nahm ein großes dickes Buch heraus. Das Buch war alt und fiel schon auseinander, wenn man es nur anguckt. Sie packte das Buch aufs Bett und schlug es auf. Das Buch enthielt Karten. Landkarten von allen Ecken der Welt. Aurelia guckte verdutzt aufs Buch. „Es gibt schon seit Ewigkeiten keine Kartenzeichner mehr. Seit wann gibt es dieses Buch?“, fragt Aurelia, als sie das Buch begutachtete. „Dieses Buch ist schon mehrere Jahrhunderte alt. Hier auf der letzten Seite stehen Unterschriften von allen Besitzern die dieses Buch jemals in den Händen gehabt haben und die Zahl daneben ist das Jahr seit wann sie es hatten. Und die älteste Jahreszahl ist nicht mal die vom ersten Besitzer.“, sagte Minerva so als würde sie über ihren größten Schatz sprechen. „Aber dann ist sie doch komplett veraltet oder nicht?“, fragte Aurelia beifällig. „Du kleines naives Ding. Du glaubst doch nicht wirklich, dass ein NORMALES Buch nach über dreihundert Jahren noch so aussehen würde.“, sagte Minerva deutlich, „Dieses Buch ist mit zwei sehr alten Zaubern belegt. Ich weiß nicht wie sie funktionieren, aber ich weiß das es ein Erhaltungs- und ein Erneuerungszauber ist. Der Erhaltungszauber, wie der Name schon sagt, erhält das Buch am Leben und der Erneuerungszauber… naja es ist eine Karte und die Welt, sowie ihre Pfade und Wege sowie Städte verändern sich. Und diese Veränderungen fügt dieses Buch immer wieder ein. Das heißt, baust du eine Straße wird sie sofort eingezeichnet.“ „Woher diese Magie wohl kommen mag?“ fragte Aurelia interessiert. „Die Legende, besser gesagt der Mythos besagt, dass diese Magie über tausende von Jahren alt sein soll. Sie wurde damals von Großmeistern der Magier ausgeübt. So jetzt hör auf mit dem ständigen Fragen und lass mich endlich was nach gucken.“ keifte Minerva schon. Aurelia stand auf und ging wieder in die Abstellkammer um das Geschirr wegzuräumen. Minerva schaute ins Buch hinein und suchte. Sie suchte und suchte, bis sie etwas fand was ihr anscheint gute Laune bereitete. „Ich hab’s, ich hab’s.“, rief sie voller Freude. Aurelia stürzte aus der Kammer und fragte: „Was hast du? Skorbut?“. „Quatsch. Ich hab die Stadt gefunden, die der Zinderling meinte. Allerdings nur die Stadt. Ich werde morgen einige Kuriere in Tirras fragen, ob ich mitkommen könnte oder ob einer von ihnen mich in die näher dieser Stadt bringen könnte, falls er in diese Richtung fahren sollte.“, sagte Minerva und legte sich ins Bett, weil es bereits tiefe Nacht war und sie morgen alle Kräfte brauchte die sie noch hatte. „Ich werde mitkommen. Du wirst körperliche Unterstützung brauchen.“, sagte Aurelia. „Mach was du für Richtig hältst, immerhin bist du alt genug und kein kleines Kind mehr.“, mit diesem Satz schlief Minerva ein.
Am nächsten Morgen waren beide schon früh auf den Beinen. Spätestens eine Stunde nach Sonnenaufgang waren die Beiden schon auf der Marktstraße von Tirras und gingen zum Kuriertreff, der in einem der Wirtshäuser ist. Die Kuriere saßen alle an einem großen Tisch. Es waren mindestens Zehn Reiter und fünfzehn Kutscher. Man konnte sie ganz einfach unterscheiden, denn die Reiter hatten die Pflicht einen Ledergürtel mit Fläschchen zutragen. Diese Fläschchen waren entweder mit Kräutern oder schmerzlindernden Getränken gefüllt. Als Minerva und Aurelia in die Schänke traten, war es noch sehr ruhig. Die Kuriere unterhielten sich über ein paar Aufträge, die Bauern sprachen von der Ernte und der Wirt bediente gerade die Kuriere. Ihnen stieg der Geruch von Bier und Met in die Nase und der Qualm der Pfeifen war genauso unerträglich. Die Taverne selber war dunkel, so dunkel, das man nur die Umrisse von den Personen erkannte, die im hinteren Teil des Wirtshauses saßen. Minerva ging langsam an den Tisch der Kuriere und als sie dicht genug war um sich zu unterhalten, fragte sie den ganzen Tisch: „Ich muss nach Gothas ! Wer kann und will mich dorthin bringen?“. Am Tisch brach lautes Gelächter aus. „Der war gut!“ sagte einer. „Nach Gothas? Das wird wohl nichts, diese Stadt existiert nicht mehr und keiner traut sich auch nur in die Nähe von diesem Unglückseligen Ort. Man sagt dort sein die Dämonen der Finsternis.“, sagte ein anderer als das Lachen verklang. „Na gut dann stelle ich meine Frage anders. Wer kann mich in die Nähe von Gothas bringen? Immerhin seid ihr Kuriere und Kuriere sind doch so Abenteuer lustig und keine Langweiler, oder?“, sagte Minerva mit einem Hauch von Herausforderung. „Was wollt ihr denn dafür bezahlen?“ fragte einer der Kutscher. „Euer Leben werde ich euch lassen.“, sagte Minerva, als sie ins Licht trat um sich genauer zu zeigen. Plötzlich wurde es still. Alle schauten sie nur verdutzt an, nicht wissend ob es nur ein Scherz war oder pure Wahrheit. „Was ist nun bringt mich nun jemand nach Gothas oder nicht?“, schrie Minerva um die versteinerten Kuriere wieder ins Leben zurück zu führen. „Ich werde sie hin bringen. Ich habe keine Angst vor Toten, Dämonen oder anderen finsteren Wesen und noch weniger Angst habe ich vor dir, Minerva.“, sagte der Kutscher ganz links am Tisch. „Wie lautet dein Name?“, fragte Minerva genervt. „Mein Name tut nichts zur Sache, denn ich meide jegliches Gespräch.“, sagte der Kutscher emotionslos. Er war in einen alten grüngrauen Umhang gewickelt. Minerva musterte ihn. Als sie fertig war knackte sie mit ihren Fingern drehte sich zu den anderen Kurieren, die immer noch halbwegs versteinert waren, und fing an laut los zu lachen. „Ausgerechnet der heruntergekommenste von euch Kurieren will mich nach Gothas bringen. Das ist doch wohl nicht mehr zu glauben dass einige der Tapfersten Männer schiss vor Geistern haben. Kannst du das glauben Aurelia? Ich nämlich nicht, aber was sollst. Gut du bringst uns nach Gothas … wie auch immer ich nenne dich einfach … genau ich werde dich Johan nennen.“, sagte Minerva, nachdem sie sich kaputt gelacht hatte. Johan stand auf und zeigte mit einer knappen Handbewegung, dass die beiden Damen ihm folgen sollten. Sie folgten ihm an die frische Luft. Nach ein paar Schritten drehte er sich um und fragte: „Wann soll es los gehen?“. „So früh wie möglich würde ich sagen.“; antwortete Minerva. „So früh wie möglich.“, sagte Johan in sich hinein, „in zwei Stunden! Früher geht nicht.“ „Das ist früh genug, Johan.“, meinte Minerva. Johan verschwand daraufhin in Richtung Stall. Minerva und Aurelia gingen daraufhin zum Lebensmittelhändler und holten Proviant für die Reise.
Nach zwei Stunden waren nun alle am Stall und konnten abreisen. Der Kurier sagte auf der ganzen Reise kein einziges Wort. Sie brauchten fast drei Tagen und ritten komplett die ganze Strecke durch. Nur für Pinkelpausen machten sie halt. Sie saßen die ganze Zeit vor zwei Pferden auf einem Anhänger, der zum Glück überdacht war, denn es hatte während ihrer ganzen Reise geregnet. Kurz bevor sie Gothas erreichten, sprach der Kurier nun doch. Er sagte: „Wir haben Gothas bald erreicht. Ihr wisst hoffentlich worauf ihr euch einlasst?“. „Wenn ich es nicht wüsste würde ich hier nicht hin wollen.“, antwortete Minerva mürrisch. Sie ritten weiter. Nach ein paar Minuten passierten sie die Grundmauern Gothas, naja zumindest das was von ihnen übrig ist. „Hier muss eine riesen große Schlacht gewütet haben.“, sagte Aurelia entsetzt. Es lagen überall Leichen herum. Das Blut von ihnen war schon getrocknet. „Zum Glück ist Gothas eine kleine Stadt gewesen. Aber wer könnte so ein großes Unglück angerichtet haben?“, fragte sich der Kurier. „Ich weiß es.“, sagte Minerva und hievte eine Waffe aus einer Leiche, „Es waren Krassuzs.“. „Ach quatsch. Krassuzs  sind vor Jahrhunderten ausgestorben.“. „Nein sind sie eben nicht!“, schrie Minerva den Kurier wütend an. „Ich erkenne es an der Schmiedekunst der Krassuzs. Kein anderes Lebewesen kann Meteoritengestein und Diamanten so flach schmieden. Und außerdem sind diese Klingen unzerstörbar. Siehe und staune.“ Minerva packte das Schwert und warf es in die Richtung von zwei Häusern. Das Schwert glitt einfach durch den harten Fels. Es flog durch zwei Häuser durch und blieb dann endlich in einem anderen Haus stecken. Der Kurier und Aurelia staunten nicht schlecht als sie das Schwert wegfliegen sahen.„Ach du heiliger.“, platzten Aurelia und der Kurier gleichzeitig heraus. „So ein Schwert kann ich auch gut gebrauchen.“, sagte der Kurier beifällig. „Lass es lieber. Die Krassuzs können jede einzelne Klinge, die sie selbst geschmiedet haben, aufspüren und glaube mir, du willst keinen Besuch von den Krassuzs.“, sagte Minerva.„Aurelia hole mir mein Buch.“. „Ja, natürlich.“, sagte sie immer noch etwas verwirrt. Aurelia lief zur Kutsche und brachte das große fette alte Buch mit. „Hier ist es Minerva. Aber warum brauchst du es jetzt? Immerhin suchen wir ja keine Wegbeschreibung.“. „Ich habe dir nicht alles über dieses Buch erzählt. Und ich werde es auch nicht. Also frage mich niemals nach dem Inhalt dieses Buches und du musst mir versprechen, dass du erst reinguckst wenn ich dir sage, dass du reingucken darfst. Hast du verstanden?“ fragte Minerva mit sehr ernster und nachhaltiger Miene. „Ich verspreche es dir.“, sagte Aurelia. Minerva schnappte sich das Buch und drehte sich so hin, dass keiner von den Beiden etwas sehen konnte. Sie murmelte kurz was in sich hinein und drehte sich dann ruckartig wieder um. „Wir sind erstmal in Sicherheit.“, sagte Minerva, „Wir sollten trotzdem keine Zeit verlieren und das Rätsel lösen.“. Minerva ging das Rätsel immer wieder im Kopf durch. In einer Stadt komplett aus Stein, die im Süden liegt, gibt es Menschen die ein gewisses Talent haben, doch sie können es nicht ausleben, weil sie eigentlich nicht existieren. Nichts kann sie aufspüren, nicht einmal ein Drachenherz. Die steinerne Mauer, die diese armen Seelen gefangen halten, sind für immer verschlossen, doch nur eine kann es schaffen sie zu befreien.„Also die Stadt ist Gothas, da bin ich mir sicher. Das Talent der Gothaner war das Handwerk. Sie existieren nicht, weil sie tot sind, aber warum kann man sie nicht aufspüren?“ fragte sich Minerva selbst. Nach mehreren Durchsuchungen der Stadt, fing sie an zu fluchen. Sie schlug mit ihrem Stock wild um sich und traf dabei mehrere Mauerstücke. Sie sah die fallenden Steinbrocken auf den Boden fliegen. Plötzlich ging ihr ein Licht auf. „Man kann sie nicht aufspüren, weil sie unter der Erde liegen. Aber wo genau? Immer hin sollen sie ja auch von Stein umzingelt sein! … hm.“, sie überlegte sehr lange, „Genau, die Gothaner waren für ihr Handwerk bekannt aber auch für ihre riesigen Kerker.“. „Na toll die Kerker von Gothas. Dieses endlose Labyrinth von Zellen Monstern und Leichen.Vollgestopft mit Verwesung und üblen Gerüchen von dem einen Schlecht werden kann.“ jammerte Minerva als sie erkannte was das Rätsel für Tücken barg. „Du weißt nun also wo du hin willst?“, fragte der Kurier. „Ja, leider. Wir müssen in das Labyrinth von Gothas. Nur weiß ich nicht wo der Eingang ist.“. „Dafür hab ich ihn schon gefunden. Schon eine ganze Weile.“, sagte der Kurier. „Wo?“,fragte Minerva eilig. Johan zeigte mit dem Finger auf ein kleines Haus. „Aurelia komm her.“, rief Minerva ihr zu, „nimm das Buch und nenne dann meinen Vollständigen Namen. Kapiert?“. „Ja und was soll ich dann beobachten?“. „Schreibe dir auf wo ich hin gehe, denn ich glaube kaum das diese Karte von dem Labyrinth Ahnung hat.“ „Aber du sagtest doch, dass die Karte alle Wege aufzeichnet.“. „Das stimmt zwar, aber nur die die nicht durch uralte Magie geschützt sind. Und ich vermute, dass es so ist, denn als ich vorhin nachgeschaut habe, habe ich auf der Karte keinen Unterirdischen Gang entdeckt.“. „Na gut, ich werde mitschreiben und euch rufen wenn ihr im Kreis lauft.“. „Wieso wir?“,fragte Minerva. „Weil ich mitkommen werde.“, sagte Johan. Minerva schnaubte aus der Nase aber sie versuchte erst gar nicht ihn davon abzuhalten. Sie sagte nur: „Beklag dich später nicht bei mir oder Aurelia.“. Mit diesen Worten begab sie sich in die kleine Hütte. Der Kurier holte eine Fackel von dem Anhänger und zündete sie an. Als er in der Hütte war klappte er eine Falltür auf. Das ganze Haus war alt und die Holzbalken, die die Steinbrocken hielten, waren moderig. Es muffelte nach vergammelten Fleisch und faulen Eiern. Der Kurier hielt Minerva zurück. Er warf die Fackel in die Grube. Er hörte es poltern. Plötzlich packte er Minerva und rannte aus dem Haus. Gerade noch rechtzeitig, denn das Haus ging, keine zwei Sekunden später, in Flammen auf. „Woher wusstest du das?“, fragte Minerva als sie sich wieder einiger maßen konzentrieren konnte. „Nicht nur du hast Geheimnisse. Also lass mich an meinen Geheimnissen hängen.“, sagte der Kurier trocken. Während sie warteten, dass das Haus abbrannte, saßen sie zusammen an einem kleineren Feuer und aßen. „Nun sagt uns doch endlich mal euren Namen.“, verlangte Aurelia. „Ich werde euch meinen Namen nicht verraten, Aurelia. Akzeptier es so oder lass es sein, aber fragt nicht mehr danach.“, antwortete der Kurier genervt. „Ist es denn für euch in Ordnung, dass wir euch Johan nennen?“, fragte Aurelia sanft. „Ich finde, Namen geben keine Identität. Sie sind zu förmlich und stellen dich in eine Kategorie. In eine Kategorie die man selber nicht akzeptabel findet.“. Aurelia wollte gerade wieder zu einer Frage ansetzen, doch Minerva und der Kurier starrten sie, mit ihren versteinernden Blicken, gleichzeitig an. Erschrocken schaute Aurelia schnell auf den Boden. Minerva hatte sie noch nie so angesehen, aber Aurelia wusste auch wann bei Minerva der Faden reißt. Doch in der Kombination von zwei Leuten die einen Blick können der einem das Blut in den Adern gefrieren lässt und bei denen der Faden schnell reißt, ist es schon fast tödlich noch irgendetwas zu sagen, beziehungsweise beide anzustarren. Das wusste Aurelia, zwar nicht aus Eigenerfahrung sondern von ihrer Mutter und ihrem Vater die ihre Schwester so anstarrten. Nach einigen Stunden war das Haus komplett abgebrannt. Minerva und der Kurier machten sich wieder bereit in die Kerker hinein zu gehen. Aurelia nahm sich genervt und leicht zittrig das Buch und machte sich bereit die Wege nachzuzeichnen. Durch das Feuer glühte das Haus recht. Man durfte es nicht berühren sonst hätte man sich daran verbrannt. Minerva ging hinter dem Kurier nach Unten. Beide mussten tierisch darauf aufpassen, dass sie nicht ausrutschten, denn die Treppe war steil. Steil und rutschig. Zwar sollte man annehmen, dass durch das Feuer alles Verbrannt und verdampft ist, doch durch die hohe zurück gebliebene Luftfeuchtigkeit war alles recht schnell wieder nass. Sie hatten ein paar fackeln dabei, allerding konnte man dadurch trotzdem nur ungefähr fünf Meter weit sehen. „Immerhin stinkt es nicht mehr nach Tot und Verwesung.“, murrte Minerva in sich hinein. „Sei froh, dass wir überhaupt hier rein können.“, meinte der Kurier sarkastisch. Unten angekommen, waren sie schon erschöpft, weil es so schwül war, als würden sie im Regen durch einen brennenden Wald laufen. 
„Kannst du mir mal verraten, was wir hier unten überhaupt suchen?“, fragte der Kurier nach längerer Zeit an Fußmarsch. „So wie du deine Geheimnisse hast, so behalte ich auch meine bis zum Schluss.“, sagte Minerva beifällig. Stunden vergingen in diesem Labyrinth. Minerva, die sonst immer wusste wo sie war, hatte die Orientierung verloren. Der ganze Kerker sah an jeder Ecke gleich aus. Jeder verbaute Stein und jedes verbogene Eisen war gleich. „Warte Minerva. Ich glaube wir drehen uns im Kreis.“, meinte der Kurier beifällig. „Entweder ist es das, oder die Wände bewegen sich“, lachte Minerva. „Bewegende Wände soweit kommt es noch und was dann? Sollen die Wände aufspringen und die Leichen tanzen.“, rief Minerva schrill. Plötzlich erschrak sie. „Johan, wofür waren die Leute in Gothas bekannt?“, fragte Minerva. „Mal überlegen ... Ich hab es! Die Menschen hier, waren damals für ihre guten Stoffe bekannt.“, sagte der Kurier. „Das ist ja schön und gut, aber was konnten die Gothaner besser als alle andere in dieser Welt?“, fragte Minerva erneut. Johan setzte sich hin und überlegte. Nach ein paar Minuten strahlte er plötzlich wie der erste Sonnenstrahl des neuen Tages. „Natürlich die Gothaner waren für ihre Baukunst bekannt.“ „Richtig. Jetzt weiß ich auch was wir hier sollen.“, sagte Minerva entspannt. „Wie bitte, du wusstest die ganze Zeit nicht warum wir hier unten rumschleichen. Zwischen all den Leichen und Muff. Du willst mich doch wohl nur hoffentlich auf den Arm nehmen?“, fragte der Kurier empört. „Natürlich, natürlich.“, sagte Minerva in Gedanken versunken und mit einer Hand kreisend. „Johan du musst hier raus und zwar so schnell es geht.“, sagte Minerva streng. „Würde ich gerne, wenn ich den Weg wüsste.“ „Dafür haben wir ja Aurelia.“, sagte Minerva. „Folge mir. Ich werd dafür sorgen das Aurelia hier runter kommt.“. Sie gingen rasch. Sie marschierten los von einer Kreuzung. Dann übergingen einen Eingang und liefen bis zur nächsten Kreuzung. Plötzlich drehte Minerva um und lief zu dem Eingang den sie übergingen. Dort rannten sie rein und bogen bei der nächsten Möglichkeit links ab. Hier liefen sie wieder bis zur nächsten Kreuzung. Und wieder drehte sich Minerva schlagartig um und lief weiter. Diesmal überging sie den ersten Eingang und bog bei der Nächsten Kreuzung links ab. Sie lief bis zum nächsten links gelegenen Eingang. Sie lief hinein. Sie rannte bis zum nächsten Eingang und machte wieder kehrt. Sie bog wieder links ab und wieder bog sie bei der nächsten Möglichkeit wieder nach links ab. Überlief wieder den nächsten Eingang und machte wieder kehrt an der nächsten Kreuzung. Rennen konnte sie anscheinend noch gut den Johan war schon außer Atem. Sie bog wieder links ab, als sie die zweite Kreuzung erreichte. Und nochmals bog sie links ab als sie die nächste Möglichkeit hatte. Jetzt aber bog sie beim nächsten Eingang rechst ab machte nach ein paar schritten kehrt und bog wieder rechts ab, als sie wieder am Ende des Ganges war. Und wieder bog sie rechts ab. Lief den Gang durch und machte kehrt als sie knapp vor einer Mauer zum Stehen kam. Sie bog links ab und lief den Weg wieder zurück. Wie gehabt lief sie an der zweiten Kreuzung wieder nach links. Und an der nächsten Möglichkeit wieder links. Sie lief wieder zum zweiten Eingang und bog wieder rechts ab, drehte sich wieder nach ein paar Metern um und lief wieder an der Kreuzung nach links. Sie lief auch wieder in den nächsten Eingang und kam wieder zurück, als sich wieder eine Wand sich in den Weg stellte. Sie bog wieder links ab und dann noch mal links. Sie lief noch ein ganzes Stück. Bis sie dann endlich zum stehen kam. Sie setzte sich hin und atmete schnell. Johan kam erschöpft an und musste sich erst mal den Bauch halten. „Und was soll das jetzt gebracht haben?“, fragte Johan als er wieder einigermaßen Luft bekam. „Ich habe damit Hilfe geholt“, antwortete Minerva mit trockener Kehle.
Aurelia saß die ganze Zeit da und zeichnete die Wege nach. Sie hatte sich etwas zu essen und zu trinken neben sich gestellt. Es war währenddessen Nacht geworden und das Feuer war die einzige Lichtquelle. Aurelia schrak auf als sie diese schnelle Fortbewegung sah und zeichnete so schnell sie konnte nach. Gerade noch rechtzeitig konnte sie den letzten Strich ziehen, denn war keine Tinte mehr da. Die ganze Karte hat das kleine Fass Tinte aufgebraucht. Aurelia erschrak vor dem Gedanke ihre Tante nicht mehr finden zu können. Doch sie hatte ja noch das Buch. Sie schaute auf die Karte und fixierte sich auf Minerva. Sie sah, dass sich nun gar nichts bewegt. Dann schaute sie genauer auf die Karte. Sie staunte. Minerva hatte mit der Karte geschrieben. Durch das hecktische Rennen, hat sie ein Wort schreiben lassen. „Hilfe“. Es dauerte bis Aurelia begriff, dass es ein echter Notruf war. Sie stand auf und rannte mit dem Buch ins abgebrannt Haus. Sie blickte wieder auf die Karte. Sie sah ihren Namen und den von Minerva. Doch wo war der Kurier. Auf der Karte stand kein zweiter Name. Sie dachte, dass nur Minerva auf dieser Karte gezeigt wird. Aber warum war sie dann auch auf der Karte und warum nicht der Kurier. Grübeln konnte sie später. Sie nahm die Beine in die Hand und lief durch den dunklen Kerker. Mit einer Fackel und dem Buch in der Hand fand sie schnell den kürzesten Weg, weil Minerva und der Kurier stundenlang umher geirrt sind. Sie fand die Beiden schließlich auf dem Boden sitzend. „Wie lange waren wir hierunten, dass du so lange brauchst um uns zu finden?“ fragte Minerva genervt, als sie hochkam. „Ihr wart einige Stunden unterwegs. Ich musste mich auch erst mal orientieren, weil ich so gut wie nichts gesehen habe.“, sagte Aurelia angespannt. Sie war genervt, Minerva nicht mal anstände machte sich zu bedanken, dass sie solange nachgezeichnet und gewartet hatte oder das sie hierrunter kam, um sie aus den Tunnel zu führen. „Gut, du gehst jetzt mit Johan wieder nach oben. Wenn ich komme dürft ihr mich nicht ansprechen! Habt ihr das verstanden?“, fragte Minerva mit Nachdruck. Die Beiden nickten. „Macht euch dann bereit zur Abfahrt. Ich steige dann auf den Karren. Ihr müsst aber langsam sein. Und nun geht endlich!“, befahl Minerva. Aurelia und Johan gingen mit dem Buch aus dem Kerker. Als Minerva glaubte sie seien außer Reichweite, schloss sie die Augen. Sie konzentrierte sich. Alles war Ruhig. Das einzige was man hören konnte war ihr Atem der so schon sehr leise war. Sie reckte sich und fing an zu singen. Der Ton war sehr tief und Minerva hielt ihn lange bis sie plötzlich so hoch sang, dass kein normaler Mensch diesen Ton noch hätte hören können. Kurz darauf fingen die Wände an zu wackeln und der Boden bebte. Es knallte.
Die Sonne stand schon hoch oben am Himmel, als Aurelia und Johan nach draußen gelangten. Sie genossen die Sonnenstrahlen kurz die auf ihren Wangen tanzten. Sie trotteten zum Karren und machten diesen Abfahr bereit. Daraufhin saßen sie sich an ihr frisch gemachtes Feuer und aßen. Es ist bereits Nacht geworden als Aurelia wiedermal über den Kurier grübelte. Sie stellte sich viele Fragen wie zum Beispiel wo er herkam oder wie er seine Zeit sonst verbringt wenn er nicht reiste, aber ihre Lieblingsfrage blieb. „Wie heißt du?“ dachte sie als sie sich zu ihm umdrehte. Er paffte, emotionslos wie er war, an seiner Pfeife. Es war eine eher gewöhnliche Holzpfeife mit einem langen Holm. Er rauchte dazu das Kaiserkraut. Es ist wohl das bekannteste kraut im ganzen Land. Es roch immer sehr stark nach Waldkräutern die man einfach am Wegrand gepflückt hatte. „Na gefällt dir die Pfeife?“, fragte der Kurier als er bemerkte das Aurelia sie anstarrte. „Mmh“ sie nickte. „Willst du schlafen gehen?“, fragte Johan als Aurelia die Augen zufielen. „Ne ne, ich bin noch nicht so weit um einschlafen zu können.“, gähnte Aurelia. Der Kurier fing an zu lachen. „Was ist denn jetzt los?“ fragte Aurelia ihn verwirrt. „Dir fallen fast die Augen zu, kippst auch noch fast um und du sagst das du nicht müde bist. Das ist mal wieder typisch Frau.“, belustigte sich der Kurier. Aurelia konnte erst gar nicht antworten schon stand der Kurier auf, packte Aurelia und hievte sie hoch. „Du legst dich jetzt auf den Karren und schläfst, sonst kannst du morgen nicht fahren undkeine wiederworte.“, befahl Johan mit einem zu großen Anflug von väterlicher Fürsorge. Aurelia musste kichern und drehte sich von ihm weg als sie bemerkte, dass sie rot wurde. Sie wurden unterbrochen als ein paar Wölfe in der Ferne heulten und Vögel von Baumkronen flogen.Auf einmal bebte die Erde. Aurelia und der Kurier erschraken. Das nahm beinahe Reißaus, doch der Kurier konnte das Pferd beruhigen. Aurelia schrie hell auf. Der Kurier raste zu ihr und erschrak selber. Die Erde war aufgebrochen. Die Straße war nun in den Kerkern von Gothas. Doch was die beiden daraufhin sahen wollten sie nicht glauben. Weiße von der Erde verschmutzte Skelette kamen aus diesem riesigen Spalt. Wandernde Leichen, die Schnurstraks auf Aurelia und den Kurier zu hielten. Johan wollte gerade einen breiten stämmigen Ast packen als Aurelia ihn fest hielt. „Warte! Hör genau hin.“, befahl sie ihm. Er war erst skeptisch doch er vertraute ihr. Er hörte das Klappern der Skelette und viel Radau von den Steinen und Felsen die immer noch von der Straße fielen. Bis er dann etwas Sanftes hörte. Die sanfte Stimme Minervas. Er schlug sich die Hände auf die Ohren und versuchte damit den Gesang aus dem Kopf zu kriegen. Aurelia legte sanft ihre Hand auf seinen Arm und sagte: „ Du brauchst dich nicht zu fürchten. Nimm die Hände wieder runter.“. Ihre Stimme war sanft und klang zutraulich. Er wollte erst nicht, doch Aurelia versicherte ihm, dass es ungefährlich sei. Er nahm die Hände in dem Moment runter, als Minerva aus dem Spalt kam. „Komm wir müssen los.“, sagte Aurelia sanft. Sie traten das Feuer aus und saßen sich auf den Karren. Minerva saß bereits hinten drauf und sang immer noch weiter. Der Kurier gab dem Pferd einen Peitschenhieb und dann ging es los. An der Front ein Karren mit einem Pferd und hinter ihnen ein großer Haufen Skelette. Sie verließen Gothas und hofften, dass sie nicht nochmal dahin mussten. 
Sie ritten drei Tage und drei Nächte durch. Aurelia und der Kurier wechselten sich ab mit lenken. Minerva sang die drei Tage durch. Aurelia massierte ab und zu Minervas Hals, damit sie durchhalten konnte. Auf dem Weg nach Tirras kam ihnen zum Glück keiner entgegen, sonst wären sie sofort vor den Skeletten geflohen. Als sie bei Minerva und Aurelia ankamen schickte Minerva die Skelette hinters Haus. Anschließend brach sie zusammen. Aurelia konnte sie glücklicher Weise gerade noch auffangen. Sie brachte sie sofort ins Haus und legte sie auf Bett. Aurelia kam wieder raus um sich zu verabschieden. „Danke“, sagte Aurelia. „Es war eine interessante Erfahrung die ich mit euch nun teilen darf.“, sagte der Kurier voller Respekt. Plötzlich gab es einen lauten Knall. Aurelia erschrak und sprang von ihrem Platz. Sie begriff erst kurz darauf, dass die Skelette zusammen gebrochen waren. Erleichterung machte sich in ihr breit denn sie dachte, dass Minerva etwas passiert sei. Sie wollte sich umdrehen um dem Kurier wieder zu sehen doch da merkte sie, dass sie bereits in seinen Armen war. Sie war vor Schreck in seine Arme gesprungen. Sie wurde rot und flüchtete sich aus seinen starken Armen, die sie immer noch in Schutz nahmen. Sie ging schnell zur Tür, öffnete diese und ging hinein. Sie wollte die Tür zu machen als sie sich umdrehte und sagte: „Auf wieder sehen mein namenloser Kurier.“. Mit diesen Worten verschloss sie die Tür. Der Kurier blieb erst regungslos stehen. Drehte sich schließlich doch um und stieg auf den Karren. Er ritt mit seinem Pferd in die Stadt zurück. 
Aurelia schaute in die dreckige und kalte Hütte. „Morgen mach ich hier erst mal sauber.“, sagte sie zu sich. Sie schaute zu Minerva. „Wenn du schläfst kannst du auch keiner Fliege was antun“, dachte Aurelia und legte sich zu ihr ins Bett.





Kapitel 3
Minerva wurde vom Sonnenlicht geweckt, welches in die kleine Hütte einfiel. Ihr war warm und etwas schwindelig. Sie wollte sich aufsetzen doch die Decken waren wie Blei auf ihrem Körper. Sie fühlte sich schwach und wehrlos. Ein unangenehmes Gefühl für eine Hexe die von allen gehasst wird. „Aurelia, Aurelia!“ versuchte sie zu rufen, doch ihre Kehle war trocken, trocken von dem durchgängigen Gesang. Minerva versuchte es noch einmal. Doch wieder kam nur ein elendiges Keuchen. Minerva hörte jemanden vor der Tür arbeiten. Sie versuchte irgendwie auf sich aufmerksam zu machen. Doch sie hatte nicht einmal die Kraft dazu sich irgendwie zu bewegen. „Wie lange hab ich geschlafen das ich so wenig Energie habe?“ fragte sie sich selbst in ihren Gedanken.
Sie war so vertieft in ihren Gedanken gewesen, das sie gar nicht mitbekommen hat, dass die Arbeit vor dem Haus beendet wurde. Sie bemerkte es erst wieder als die Tür langsam aufging. Minervas Atem stand still. Sie hatte Panik, dass es ein fremder ist, der ihr Leid zufügen wollte. Sie war erleichter als sie endlich Aurelias Gesicht sah. Sie keuchte um ihre Aufmerksamkeit zu gewinnen. Erst bemerkte Aurelia es nicht, doch nach einem zweiten Keuchen, welches sich nach einem sterbenden Tier anhörte, nahm Aurelia endlich zur Kenntnis, dass Minerva aufgewacht war. Sie ging zu ihr. „Schön, dass du wieder wach bist.“, sagte Aurelia als sie Minerva von ihren Bettdecken befreite. 
Minerva war endlich Befreit und setzte sich schnell auf. Sie hätte es lieber bleiben lassen sollen. Ihr wurde schwarz vor Augen und fiel wieder auf den Rücken. Aurelia erschrak und ging schnell Wasser holen. Aurelia setzte Minerva auf und verabreichte ihr etwas von dem frischen kühlen Nass. Minerva schlang es gerade zu hinunter. Sie atmete tief durch und lies sich wieder auf Bett senken. „Wie lange hab ich geschlafen?“ fragte Minerva schließlich als sie wieder das Gefühl hatte ordentlich sprechen zu können.  Die Frage drang nur leise an Aurelias Ohr aber dennoch konnte sie sie verstehen. „Es waren zwei Wochen. Du hast Glück mich hier zu haben. Du hättest nämlich genauso auch tot sein können.“, sagte Aurelia, als sie einen Tee für Minerva kochte. „Zwei Wochen! Kein Wunder das ich kaum noch eine Stimme habe.“, sagte Minerva, als sie begriff wie gefährlich dieses Unterfangen wirklich war. „Und wenn du nicht aufhörst zu reden hast du bald keine mehr. Hier trink das danach wird es dir besser gehen!“, forderte Aurelia von ihr. Minerva trank ohne Widerworte. Sie wusste das es sinnlos gewesen wäre wenn sie versuchte hätte zu protestieren, denn Aurelia ist die beste Kräutersammlerin und Pflanzenkundige die sie kannte. 
Nach ein paar Minuten merkte Minerva, dass sie ihre Kraft wieder bekam. Sie setzte sich vorsichtig  auf. Ihr war immer noch etwas schwummrig. Doch immerhin wurde ihr nichtmehr schwarz vor Augen. Sie beließ es erstmal nur beim Sitzen. Sie trank weiter Wasser und ihren Tee. Aurelia war währenddessen wieder im Garten und erntete das Gemüse. Sie nahm das Gemüse und ging wieder ins Haus. Das abgeerntete Gemüse stellte sie am brennenden Kamin ab und holte den großen Kochtopf aus der Kammer. Sie füllte ihn ein wenig mit Wasser und brachte dieses zum Kochen. Minerva war währenddessen vom Bett in ihren Schaukelstuhl gekommen. Sie hatte wieder einmal angefangen zu stricken. „Aurelia wann bist du mit dem Essen fertig? Ich will mich endlich um den Knochenhaufen kümmern der hinterm Haus liegt.“, sagte Minerva ungeduldig. „Du wirst dich hüten heute noch einen Finger krumm zu machen. Wir haben schon den späten Abend erreicht. Die Suppe ist trotzdem gleich fertig.“, sagte Aurelia etwas genervt. Minerva nervte es, dass ihre Nichte Recht behalten würde. Sie sah daher ein, dass sie erst morgen anfangen würde wieder zu singen. 
Am nächsten Morgen gingen es Minerva schon viel besser. Nach einem Tee und dem Frühstück, welches nur einem halben leib Brot bestand, ging sie mit ihrem Stock nach draußen. Aurelia folgte ihr hinters Haus zum Knochenberg. „Jetzt musst du mir doch verraten wofür die Skelette sein sollen.“ „ich hatte dir doch von dem Zinderling erzählt. Hatte ich auch erwähnt das sie nur den dringendsten Wunsch durch ein Rätsel darlegen?“, fragte sie Aurelia doch sie ließ sie gar nicht erst zu Wort kommen,  „Naja jetzt wird es interessant. Schau hin.“ . Aurelia hielt sich direkt schon die Ohren zu, doch Minerva zeigte ihr, dass sie ihre Arme wieder runternehmen könnte. Aurelia vertraute ihr und nahm die Arme runter. Minerva holte kurz Luft und fing an zu singen. Wieder erst ihre einsteigende Melodie, doch diesmal klang sie dunkler. 
Die Knochen fingen an zu beben. Minerva wechselte in eine andere Melodie und die Knochen fingen an in der Luft zu schweben. Sie setzten sich wieder zusammen. Sie bildeten dieses mal aber nicht eine einfache Arme aus Skeletten sondern einen riesigen Golem aus Knochen. Der Golem war fastdrei Mal so groß wie das Häuschen aber bullig wie drei Elefanten. Er hatte zwei Arme und Beine aber keinen Hals. Minerva änderte wieder die Melodie und lies den Golem nun langsam vorschreiten. Der Golem bückte sich und fing an in der Erde zu buddeln.  Aurelia wusste nun gar nicht mehr ob Minerva noch bei klarem Verstand sei. Doch kaum wollte sie etwas sagen, sah sie wozu das ganze Theater sein soll. Der Golem lockerte die Erde, die direkt am Hausrand lag und zog eine Linie. Er zog drei weitere Linien zu einem Viereck. Dieses Viereck war nun genauso groß wie der Grundriss vom Haus. Der Knochenriese fing nun an die Erde, innerhalb dieses Vierecks, zu entfernen. Nach dem er das Tat ging er zu zwei stämmigen Bäumen. Er riss sie ohne Gnade aus der Erde und rammte jeweils einen Baum in die Eckpunkte des Vierecks. Die Bäume waren fast perfekt gerade. Als Aurelia erkannte was der Golem vorhatte, lief sie ins Haus. Der Golem wand sich der Hauswand zu, die ins Viereck fiel. Er griff sich die Baumstämme der Holzwand und riss sie aus der Erde. Genau dahinter stand Aurelia mit allen Töpfen und ihren Vorräten. Sie konnte das wichtigste von den Regalen retten die an der Wand befestigt waren. 
Der Golem hob die ganze Wand hoch und schlug sie Rechts vom Haus wieder ein.Somit war die Hauswand doppelt so lang wie vorher. Aurelia wäre durch die Vibration fast umgefallen und hätte die Krüge und Töpfe zerstört. Als sie wieder aufstand sah sie den weißen Riesen in den Wald stapfen und Minerva torkelte hinterher. 
"Ai Minerva, du bist die merkwürdigste Person die ich kenne. Und dabei bist du immernoch die Liebenswürdigste.", sagte Aurelia leicht verzweifelt und stolz. 

Die nächsten drei Tage arbeite Minerva mit dem Golem. Die Hütte war nun doppelt so groß wie vorher. Aurelia hatte nun ihren eigenen Bereich. Sogar mit Tür. Trotzdem schlief sie ab und zu bei Minerva. Aber eher nur in den sehr kalten Nächten. Damit sie beide nicht stark feierten. Aurelias Zimmer war einfach. Ein Bett ein Schrank und zwei Türen. Eine zur Küche und eine nach draußen. Das Dach war jetzt aus Holz welches von Stroh bedeckt war. 
Drei Wochen sind nun seit den Bauarbeiten vergangen. Minerva war mal wieder verreist um ihre Nachfolgerin zu finden, wie immer blieb Aurelia zuhause um auf das Haus und den Garten aufzupassen. Aurelia war im Garten als sie am helligten Tage jemanden laufen hörte. Aurelia schaute von ihren Tomaten auf doch sie sah niemanden. Sie blieb erst noch aufmerksam bis das Geräusch aufhörte. Danach widmete sie sich wieder ihren Tomaten. Plötzlich hörte sie wieder jemanden laufen. Nur dieses Mal war es lauter aber nicht mehr ganz so schnell, sie guckte wieder nach oben. Es kam näher und so langsam machte es Aurelia angst. Aurelia griff nach ihrem Stock, der direkt neben der Tür stand. Sie sah jemanden kommen es war klein und lief immerhin auf zwei Beinen. Als Aurelia die Person erkannte lag sie ihren Stock beiseite und lief ins Haus. Sie kam mit einer Lederbauchtasche gefüllt mit Kräutern und vielen kleinen Fläschchen wieder aus dem Haus und lief dem kleinen Jungen entgegen. Als der kleine Junge Aurelia sah, rief er:" Das Baby! Es kommt!" Aurelia antwortete nicht sondern konzentrierte sich darauf nicht hinzufallen und schnell zu sein. Keine halbe Stunde später waren sie am Stadtrand von Tirras. Kaum dort angekommen wurden Aurelia direkt böse Blicke zu geworfen. Die Stadtbewohner kannten natürlich die Geschichte von Aurelia und ihrer Mutter. Doch das interessierte sie nicht im Geringsten. Sie lief mit dem kleinen Jungen direkt in das Haus von Nomisia. Nomisia lag in ihrem dunklen Haus bereits auf ihrem Bett und hatte schon soweit alles vorbereitet. Immerhin ist es jetzt schon ihr sechstes Kind. Aurelia kam bereit ans Bett. "Hallo Nomisia, wie gehts dir?", fragte sie obwohl sie die Antwort schon kannte. "Ahhhhh.... Hallo Aurelia, alles ist gut außer einer Sach." "Die da wäre?", fragte Aurelia. "HOL DAS BABY ENDLICH RAUS!", schrie Nomisia so laut das es wahrscheinlich die ganze Stadt gehört hat. "Wo ist Johna?" fragte Aurelia als sie ihre Kräuter für die Geburt bereit legt. "Weiß ich nicht. Ich glaube bei der Arbeit." Sagte Nomisia als sie nach Luft schnappte. " Du, hol deinen Vater!", sagte Aurelia zu dem Jungen der sie begleitet hat. 
Nach mehren Stunden der Schmerzen kam Erleichterung in Nomisia auf als sie das Schreien ihres Kindes hörte. Aurelia konnte Johna genauso wenig leiden Minerva aber sie wollte ihn nicht gleich verfluchen. "Johna! Ich hoffe du weißt was für ein Glück du mit ihr hast und auch was für ein Glück du mit deiner neuen Tochter hast." Sagte Aurelia schroff. Als Aurelia das neu geborene Mädchen in den Armen hält. Johna sagte gar nichts denn er war gerührt vom Anblick seiner Tochter. Aurelia gab Nomisia ihre Tochter. Dann drehte sie sich zu den Kindern hin die gleichzeitig mit ihren Vater ins Haus gekommen waren. "Passt gut auf eure Schwester auf. Lasst sie nicht unbeaufsichtigt und lasst sie euch nicht wegnehmen.", sagte Aurelia als sie sich verabschiedete und aus der Tür raus ging. 
Es war Stockduster. Hätten die Laternen nicht gebrannt hätte sie nicht einmal den Weg zum Tor gefunden. Am Tor angekommen wurde die Zugbrücke direkt ohne widerrede geöffnet, denn die Menschen hatten fast genau so viel Angst vor ihr wie vor Minerva. 
Aurelia ging ohne Licht wieder zur Hütte zurück. Nur das Mondlicht gab ihr einen Anhalt. Das störte sie jedoch nicht. Ihre Augen konnten selbst in der tiefsten Dunkelheit noch genug erkennen. Als sie an der Hütte ankam brannte Licht im Haus. Sie sah ihren Stock immer noch an der Tür angelehnt. Der Stock der sie in vielen Momenten beschützt hat. Es war auch eher ein Stab als ein Stock denn der Stab war einen ganzen Kopf größer als Aurelia selbst.
Aurelia schlich sich nun an ihr eigenes Haus ran. Als sie der Tür näher kam hörte sie zwei Stimmen. Sie griff nach ihrem Stab und öffnete die Tür. Aurelia schaute hinein und erschrak. Da standen eine riesige Echse, auf zwei Beinen, und ein kleiner Drache. Die Echse zischte und der Drache machte sich zum Sprung bereit. Beide gingen in Angriffshaltung. Die Echse zog ein Schwert. "Hört ihr wohl auf damit!", rief eine Stimme aus der Küche. Minerva kam ins Zimmer. Aurelia ging sichtbar ein Stein vom Herzen sie hatte schon mit dem schlimmsten gerechnet. "Minerva, kannst du mir mal erklären warum du erstens wieder hier bist und zweitens was zwei Echsen in unserem Haus machen?", fragte Aurelia entsetzt als sie sich wieder beruhigt hatte. "Du brauchst erstmal nicht hier so rumschreien. Aber ich beantworte deine Fragen gerne bei einem Tee." Sagte Minerva und holte vier Becher hervor. 
"Also ihr seit Freunde von Minerva, weil sie damals dafür gesorgt hatte das ihr aus dem Verlies des Königs ausbrechen konntet?", fragte Aurelia nochmal Konkret nach, weil sie es immer noch nicht glauben konnte. "Genau. Ich bin Margur !", sagte die Echse mit einem zischen. "Mich kennt man in eurer Sprache als Dura-Amas ! Ich wurde in der Wüste aufgelesen von Wüstenhändlern. Wie genau ich hierher kam weiß ich nicht."Aurelia war ganz erstaunt darüber das sie beide verstehen konnte. "Mach den Mund zu Aurelia, das ist unhöflich!", sagte Minerva mit Nachdruck. Als Aurelia sich wieder eingekriegt hatte, sagte sie:" Naja eigentlich mag ich keine Echsen, aber der Drache ist echt niedlich!" "Ich bin fast 500 Jahre alt und für meine Rasse ausgewachsen.", antwortete der Drache schroff. "Wie wurdest du so alt?", fragte Aurelia neugierig. "Meine Rasse ist dafür bekannt, dass unser Immunsystem sehr stark ist. Wir sterben auch nicht an Altersschwäche. Wir können nur im Kampf beziehungsweise durch eine starke Krankheit sterben.", sagte Dura-Amas stolz als er seine Nase hoch nahm. "Hier riecht etwas sehr gut!", röchelte Dura-Amas, "Was ist das was du da wieder zauberst? Nein sag es mir nicht. Ich will es selbst finden." Dura-Amas sprang vom Bett und wanderte unterm Tisch zum Kamin und schnüffelte. Er sah aus wie ein kleines Hündchen das sein Spielzeug suchte. In der hinteren Hausecke kauerte er und wartete kurz. Plötzlich sprang er landete mit der Schnauze zu erst auf dem Boden und hatte was im Maul. Er drehte sich wieder um. Die anderen sahen ihm dabei zu wie er den Schwanz einer Ratte wie eine Nudel in den Mund sog. Aurelia ekelte sich zwar ein bisschen davor, sonst blieb es aber ganz ruhig. Dura-Amas ging gemütlich zu Aurelia, sprang hoch und setzte sich auf Aurelias Schoß. Dura-Amas war zwar klein aber sein Körpergewicht war für die größe dennoch schwer und Aurelia musste erstmalkräftig nach Luft schnappen. Der Drache rollte sich ein und tat so als ob er schlafen würde. Aurelia streichte ihm über die Schuppen. " So jetzt erzähl aber erstmal wie du die beiden aus den Kerkern des Königs bekommenhast." Sagte Aurelia neugierig und machte es sich bequem, so gut es mit einem Drachen auf dem Schoß eben ging. Minerva lachte. "Das ist nun eigentlich ganz einfach gewesen!", lachte sie immer noch. Als sie wieder ruhig war begann sie:" Naja, Als ich erfahren hatte das König Devidos, verflucht sei er, die Beiden gefangen hielt, für seine Belustigung wohl bemerkt, konnte ich mich nicht mehr zurück halten. Er hat schon viele Schlimme Sachen getan, Kriege angefangen, und jedes mal verloren, die Armen beraubt und vieles mehr. Aber das konnte ich nicht mit ansehen also bin ich zum Schloss gefahren Zwang die Soldaten die Tore zu öffnen und mir den Weg frei zu machen. Dann stand ich vor ihm. Er in seiner prachtvollen Königskleidung auf seinem faulen Breitarsch, und bevor er aufstehen konnte. Fing ich an zu singen. Er war natürlich gleich wehrlos und tat das was ich wollte. Er zog sich also seine Hose aus sodass seine Kronjuwelen raushingen. Daraufhin ließ ich ihn ein Messer ziehen welches er sich an seinen Sack anlegte. Kurz bevor er sich den Sack hätte abschneiden können, hörte ich auf zu singen. Kurz darauf sagte ich zu ihm, dass er die Beide frei lassen solle. Devidos war erzürnt und erstaunt zu gleich. Doch bevor er überhaupt etwas sagen konnte, ließ ich ihn auf sein Gemächt starren. Ich wurde Bleich und eiskalt. Devidos war wie versteinert. Er guckte mich dann doch schließlich an und nickte nur." Minerva musste wieder anfangen zu lachen, als sie sich das Gesicht des Königs ins Gedächtnis rufte. "Devidos ist ein Narre wenn er glaubt das er sich alles erlauben kann nur weil er König ist. Wenn ich wollen würde könnte ich jeden Krieg, jeden König und noch viel besser jeden Mann außer gefächt setzten." Posaunte Minerva heraus. "Warum tust du es dann nicht?", fragte der Drache obwohl er die Antwort schon kannte. "Es gibt Menschen die verdienen den Tot und es gibt Menschen die den Tot nicht verdienen. Nur leider trifft der Tot meist die Menschen die ihn nicht verdienen." Raunte Minerva nachdenklich.
Nach einiger Zeit der Erzählungen wurde es bereits wieder Tag. Kaum war die Sonne aufgegangen, sind die Beiden Echsen wieder gegangen. Aurelia und Minerva standen beide an der Tür ihrer Hütte und winkten den Beiden hinterher. "So und warum waren die Beiden jetzt hier?", fragte Aurelia, als Beide im Garten standen um Gemüse zu ernten. "Dafür, dass ich ihr Leben gerettet habe, sind Beide nun meine Augen und Ohren im ganzen Königreich. Das wichtige hab ich unterwegs mit ihnen besprochen. Aber im Allgemeinen kann ich sagen, dass ich bald aufbrechen muss. Sonst könnte ein fürchterlicher Krieg ausbrechen, den selbst ich nicht überleben würde. Die Wüsten bewegen sich und die Unterwelt der Berge im Südwesten tun sich auf. Sie werden noch ihre Zeit brauchen. Aber Devidos wird nicht mehr lange Herrschen.", flüsterte Minerva zögerlich. Aurelia atmete kurz durch:" Wo soll es hin gehen?" Aurelia schaute Minerva ernst an. "Lass mich raten, egal was ich mache, du wirst definitiv mitkommen?" fragte Minerva, während Aurelia bereits nickte. Einer kurzen Pause und einem tiefen Seufzer sagte Minerva schließlich:" Dann mach dich bereit, für den Weg, in die Eisberge von Taharin."





















Kapitel 4
Die Schenke in Tirras war mal wieder brechend voll, als Johan hinein trat. Man bemerkte ihn erst nicht was ihn beruhigte, denn wenn schon jemand mit der Hexe geht sollte er lieber gleich weg bleiben. Johan ging zum Tresen. Er bestellte für sich ein Bier und schaute sich während dessen um. Die Menge war betrunken. Jeder einzelne bis auf ein paar ruhige Leute in der dunklen Ecke. Er nahm das Bier und setzte sich draußen vor Schenke auf eine Bank. Die Nacht war klar und der Himmel hell erleuchtet von den Sternen. Er dachte an das vergangene Abenteuer, an die Skelettarmee und an Aurelia. Er ertappte sich selbst, als er rot wurde und dachte sofort an etwas anderes. Doch egal wie stark sein Wille auch war. Er musste immer wieder an sie denken. Sein Pferd stand neben ihm festgebunden an einem der Stützpfeiler der Schenke. Er schaute sein Pferd an und sagte:" Was mach ich bloß. Verliebt hab ich mich anscheinend schon, aber ich könnte ihr niemals die Wahrheit sagen!". Er seufzte. Bis auf das dumpfe grölen aus der Schenke war nichts zu hören. Er suchte den Sternenhimmel nach dem Nordstern ab. Als er ihn gefunden hatte, merkte er sich die Richtung. "Wollen wir los?", fragte er sein Pferd. Das Pferd schnaubte nur aus der Nase. "War ja nur ne frage.", sagte Johan und legte sich auf die Bank und deckte sich mit seinem Mantel zu, "dann reiten wir morgen eben in den Norden." Er gähnte, schaute zu den Sternen und schlief ein. 
Johan wurde Unsanft von der Stadtwache geweckt. Sie stießen die Bank um sodass er nach hinten fiel. Johan schrie vor schreck auf. Die Wachen lachten ihn aus. "Johan du weißt ganz genau, dass du hier Nachts auf der Bank nicht schlafen darfst!", sagte die eine Wache. Die drei Wachen lachten laut. "Es ist aber nicht mehr Nacht." sagte Johan, als er aufstand und in den Himmel zeigte. "Die Sterne sind weg also ist auch keine Nacht mehr!" Die Wachen wurden grimmig und einer der Wachen bewegte sich auf Johan zu. Diese wollte ihn packen, doch Johan weichte durch eine flinke Drehung einfach aus. Nun kam der zweite dazu. Beide versuchten ihn zu fangen. Aber Johan war schnell genug um dem ersten auszuweichen und unter den Armen des Zweiten sich durch zu schlängeln. Nun stand er hinter den Beiden Muskelprotzen, die jeweils ein Kopf größer waren als er selbst. Johan wollte sich umdrehen, doch da packte ihn der dritte. "Du entkommst uns nicht!", sagte die Wache die ihn fest hielt. "Das glaubst du!" sagte Johan. Johan pfiff laut. Sein Pferd trat nach hinten aus und traf somit die Seite von der Wache. Die Wache schrie auf, ließ Johan los und beide flogen ein paar Meter über die Straße. Johan rappelte sich wieder. Die anderen beiden Wachen liefen zu ihrem Kameraden. Johan schlenderte keuchend zu seinem Pferd. "Lass uns Los!" sagte Johan und band sein Pferd vom Pfosten. Die Wachen hievten den verletzten auf die Beine und schleiften ihn zum Medicus. Johan stieg auf sein Pferd und ritt Richtung Norden um aus der Stadt raus zukommen. Er schaute sich noch mal die Häuser aus Holz an die.am Wegesrand standen mit den vielen Läden. Er würde diese Stadt vermissen auch wenn es genügend Menschen geben würde die er jeden Tag umbringen könnte. Die Hufe des Pferdes klapperten auf den Pflastersteinen. Sein Pferd wurde langsamer. Und das klappern wurde unheimlich da es sonst kein Geräusch auf der Straße gab. Johan bekam eine richtige Gänsehaut. Es wurde erst recht unheimlich als die Laternen ausgingen. Johan griff in seine Gürteltasche und wartete ab was passiert. Er versuchte sein Pferd nun wieder anzutreiben, bis er bemerkte, dass es nicht mehr auf ihn hörte, vergingen ein paar Sekunden. Er erschrak, alser zwei bereits wartende Gestalten in Schwarzen Mänteln sah. "Wusste ich doch, dass du schon wieder abhauen willst. Wohin sollst denn dieses mal gehen?", fragte eine ihm bekannte Stimme. Johan schaute sich die beiden genau an. Da sie im Schatten standen konnte er sie nicht richtig erkennen. Dennoch erkannte er die beiden Silhouetten. Es waren Minerva und Aurelia. "Was wollt ihr von mir? Warte ich weiß es. Ich soll euch irgendwo hinbringen, welches überhaupt nicht mein Ziel ist.", sagte Johan genervt." Du bist ja doch klüger als ich dachte Johan.", sagte Minerva als Johans Pferd direkt vor ihr stehen blieb, " Wir müssen mit dir Reden." "Dann sprich!", forderte er sie auf.
Nach einer weile, war alles gesagt. Johan seufzte. " In die Eisberge soll ich euch bringen. Ich wollte sowieso in den Norden aber soweit eigentlich nicht. Aber mit euch hat man immer eine gute Geschichte die man erzählen kann.", dachte Johan laut. "Ich werde euch erstmal begleiten und mich später entscheiden.", entschloss sich Johan nun. "Du musst aber bedenken, dass wir noch einen kurzen Abstecher machen werden.", sagte Minerva deutlich. "Wie schon gesagt mit euch hat man immer eine gute Geschichte parat. 
Früh am Morgen, die Sonne war noch nicht ganz auf gegangen, zogen die drei los. Mit dem Gepäck auf dem Karren und der magischen Karte. Den ganzen morgen über verhielten sich alle sehr ruhig. Johan befahl das Roß. Minerva lass in ihrem Buch oder Strickte und Aurelia wusste nicht wirklich viel mit sich an zu fangen. Sie setzte sich neben Johan auf die Kutscherbank. Bis zum Mittag sprach keiner ein Wort. 
"Halt hier muss du den rechten Weg nehmen.", befahl Minerva. "Bitte? Du hast nicht wirklich vor durch den Schunkenwald zu fahren?", fragte Johan entsetzt. "Schunkenwald?", fragte Aurelia irritiert. "Hab ich dir denn wirklich gar nichts beigebracht?", fragte Minerva angestrengt. "Den Schunkenwald sollte man umbenennen in den Wald der nie widerkehrenden Menschen. Ich hab es selbst miterlebt. Eine große Menschenmenge ist damals hineingegangen. Ich bin damals schon draußen geblieben. Denn ich kannte die Gerüchte. Das absolute Böse liebt diesen Wald. Es beschützt ihn und benutzt ihn als Spielwiese. Die Menschen die hinein gingen kamen nicht mehr Raus. Drei Tage haben wir gewartet. Es gab aber ein Zeichen warum wir da nicht rein gehen sollten. Drei Köpfe rollten aus dem Wald.", sagte Johan demütig. "Ich weiß was damals passiert ist, doch weiß ich auch was nun in diesem Wald lebt. Also los weiter fahren.", befahl Minerva. "Nein, erst wenn du mir sagst was das drin ist und warum du da durch willst.", protestierte Johan. 
Das Pferd stoppte und wollte auch nicht mehrweiter.
"Na gut. Die Krassuzs leben nun in diesem Wald. Das Böse aus diesem Wald ist nach der Zerstörung Gothas verschwunden es ist abgetaucht einfach weg. Ich weiß auch nicht wohin es gegangen ist. Na ja und warum ich da durch will. Der weg nach Elandur ist einfach schneller.", sagte Minerva. "Elandur, du willst wirklich in die Hauptstadt? Ich werde vor der Stadt kampieren aber mich bringen keine 20 Pferde hinter diese Mauern.", sagte Aurelia bestürtzt. "Wir haben beide dort zu erscheinen. Und Johan kann von mir aus uns zum Schloss fahren und dann vor den Stadtmauern warten aber du kommst mit. Der König verlangt nach uns und ich verlange nach ihm und meiner Schwester.", sagte Minerva mit Nachdruck und winkte mit ihrer Hand ab. "Fahr weiter Johan. Das hat kein Sinn mehr zu diskutieren.", sagte Aurelia und blieb neben Johan sitzen. 
